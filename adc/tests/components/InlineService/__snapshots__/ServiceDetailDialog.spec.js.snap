// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) ServiceDetailDialog render normally 1`] = `
<div
  className="ServiceDetailDialog-container"
>
  <Connect(DialogFilter)
    DialogBtnContent="Edit"
    DialogID={1}
    DialogName="a"
    DialogTitle="Service Detail"
    getModel={[Function]}
    handleSubmit={[Function]}
    isChanged={false}
    isOpen={false}
    kernelId={1}
    kernelIds={
      Array [
        1,
      ]
    }
    modelId={1}
    modelList={Array []}
    that={
      ServiceDetailDialog {
        "_reactInternalInstance": ShallowComponentWrapper {
          "_calledComponentWillUnmount": false,
          "_compositeType": 0,
          "_context": Object {},
          "_currentElement": <ServiceDetailDialog
            DialogID={1}
            DialogName="a"
            dispatch={[Function]}
            getModel={[Function]}
            getServiceDetail={[Function]}
            isOpen={false}
            kernelId={1}
            modelId={1}
            modelList={Array []}
            that={Object {}}
            toggleDialog={[Function]}
      />,
          "_debugID": 3,
          "_hostContainerInfo": null,
          "_hostParent": null,
          "_instance": [Circular],
          "_mountOrder": 1,
          "_pendingCallbacks": null,
          "_pendingElement": null,
          "_pendingForceUpdate": false,
          "_pendingReplaceState": false,
          "_pendingStateQueue": null,
          "_renderedComponent": NoopInternalComponent {
            "_currentElement": <div
              className="ServiceDetailDialog-container"
      >
              <Connect(DialogFilter)
                      DialogBtnContent="Edit"
                      DialogID={1}
                      DialogName="a"
                      DialogTitle="Service Detail"
                      getModel={[Function]}
                      handleChange={undefined}
                      handleSubmit={[Function]}
                      isChanged={false}
                      isOpen={false}
                      kernelId={1}
                      kernelIds={
                              Array [
                                      1,
                                    ]
                      }
                      modelId={1}
                      modelList={Array []}
                      that={[Circular]}
                      toggleDialog={[Function]}
              />
      </div>,
            "_debugID": 4,
            "_renderedOutput": <div
              className="ServiceDetailDialog-container"
      >
              <Connect(DialogFilter)
                      DialogBtnContent="Edit"
                      DialogID={1}
                      DialogName="a"
                      DialogTitle="Service Detail"
                      getModel={[Function]}
                      handleChange={undefined}
                      handleSubmit={[Function]}
                      isChanged={false}
                      isOpen={false}
                      kernelId={1}
                      kernelIds={
                              Array [
                                      1,
                                    ]
                      }
                      modelId={1}
                      modelList={Array []}
                      that={[Circular]}
                      toggleDialog={[Function]}
              />
      </div>,
          },
          "_renderedNodeType": 0,
          "_rootNodeID": 0,
          "_topLevelWrapper": null,
          "_updateBatchNumber": null,
          "_warnedAboutRefsInRender": false,
        },
        "cb": [Function],
        "context": Object {},
        "handleSubmit": [Function],
        "props": Object {
          "DialogID": 1,
          "DialogName": "a",
          "dispatch": [Function],
          "getModel": [Function],
          "getServiceDetail": [Function],
          "isOpen": false,
          "kernelId": 1,
          "modelId": 1,
          "modelList": Array [],
          "that": Object {},
          "toggleDialog": [Function],
        },
        "refs": Object {},
        "state": Object {
          "isChanged": false,
          "kernelIds": Array [],
          "modelId": undefined,
          "name": undefined,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      }
    }
    toggleDialog={[Function]}
  />
</div>
`;
