// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) Filter products is empty 1`] = `
<div
  id="abc"
>
  <div>
    <div
      className="filterTime"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Date Range:
      </div>
      <PickerWrapper
        allowClear={false}
        format="YYYY-MM-DD HH:mm:ss"
        inputPrefixCls="ant-input"
        locale={Object {}}
        onChange={[Function]}
        onOk={[Function]}
        onOpenChange={[Function]}
        placeholder={
          Array [
            "Start Time",
            "End Time",
          ]
        }
        popupStyle={Object {}}
        prefixCls="ant-calendar"
        showTime={
          Object {
            "format": "HH:mm:ss",
          }
        }
        style={
          Object {
            "marginLeft": "10px",
          }
        }
        transitionName="slide-up"
      />
    </div>
    <div
      className="filtertwo"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Process ID:
      </div>
      <Select
        choiceTransitionName="zoom"
        onChange={[Function]}
        optionFilterProp="children"
        placeholder="Process ID"
        prefixCls="ant-select"
        showSearch={true}
        style={
          Object {
            "marginLeft": "10px",
            "width": "200px",
          }
        }
        transitionName="slide-up"
      />
    </div>
    <div
      className="filtertwo"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Product ID:
      </div>
      <Select
        choiceTransitionName="zoom"
        mode="multiple"
        onChange={[Function]}
        optionFilterProp="children"
        placeholder="Product ID"
        prefixCls="ant-select"
        showSearch={true}
        style={
          Object {
            "marginLeft": "10px",
            "width": "400px",
          }
        }
        transitionName="slide-up"
      />
    </div>
    <div
      className="filtertwo"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Target Code:
      </div>
      <Select
        choiceTransitionName="zoom"
        mode="multiple"
        onBlur={[Function]}
        onChange={[Function]}
        optionFilterProp="children"
        placeholder="Defect Code"
        prefixCls="ant-select"
        showSearch={true}
        style={
          Object {
            "marginLeft": "10px",
            "width": "400px",
          }
        }
        transitionName="slide-up"
      />
    </div>
  </div>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="-striped -highlight"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Defect Code",
          "accessor": [Function],
          "id": "defectId",
          "sortable": false,
          "width": 130,
        },
      ]
    }
    data={Array []}
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={20}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No rows found"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        5,
        10,
        20,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={true}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={false}
    sortable={true}
    style={
      Object {
        "height": "200px",
        "margin": "0 auto",
        "width": "500px",
      }
    }
    subRowsKey="_subRows"
  />
  <div
    className="filtertwo"
  >
    <div
      style={
        Object {
          "textAlign": "right",
          "width": "100px",
        }
      }
    >
      Others Code:
    </div>
    <Select
      choiceTransitionName="zoom"
      mode="multiple"
      onBlur={[Function]}
      onChange={[Function]}
      optionFilterProp="children"
      placeholder="Defect Code"
      prefixCls="ant-select"
      showSearch={true}
      style={
        Object {
          "marginLeft": "10px",
          "width": "400px",
        }
      }
      transitionName="slide-up"
    />
  </div>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="-striped -highlight"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Defect Code",
          "accessor": [Function],
          "id": "defectId",
          "sortable": false,
          "width": 130,
        },
      ]
    }
    data={Array []}
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={20}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No rows found"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        5,
        10,
        20,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={true}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={false}
    sortable={true}
    style={
      Object {
        "height": "200px",
        "margin": "0 auto",
        "width": "500px",
      }
    }
    subRowsKey="_subRows"
  />
  <Button
    clicked={false}
    disabled={true}
    ghost={false}
    loading={false}
    onClick={[Function]}
    prefixCls="ant-btn"
    style={
      Object {
        "margin": "10px 0px 0px 45%",
      }
    }
  >
    Check
  </Button>
</div>
`;

exports[`(Component) Filter render normally 1`] = `
<div
  id="abc"
>
  <div>
    <div
      className="filterTime"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Date Range:
      </div>
      <PickerWrapper
        allowClear={false}
        format="YYYY-MM-DD HH:mm:ss"
        inputPrefixCls="ant-input"
        locale={Object {}}
        onChange={[Function]}
        onOk={[Function]}
        onOpenChange={[Function]}
        placeholder={
          Array [
            "Start Time",
            "End Time",
          ]
        }
        popupStyle={Object {}}
        prefixCls="ant-calendar"
        showTime={
          Object {
            "format": "HH:mm:ss",
          }
        }
        style={
          Object {
            "marginLeft": "10px",
          }
        }
        transitionName="slide-up"
      />
    </div>
    <div
      className="filtertwo"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Process ID:
      </div>
      <Select
        choiceTransitionName="zoom"
        onChange={[Function]}
        optionFilterProp="children"
        placeholder="Process ID"
        prefixCls="ant-select"
        showSearch={true}
        style={
          Object {
            "marginLeft": "10px",
            "width": "200px",
          }
        }
        transitionName="slide-up"
      />
    </div>
    <div
      className="filtertwo"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Product ID:
      </div>
      <Select
        choiceTransitionName="zoom"
        mode="multiple"
        onChange={[Function]}
        optionFilterProp="children"
        placeholder="Product ID"
        prefixCls="ant-select"
        showSearch={true}
        style={
          Object {
            "marginLeft": "10px",
            "width": "400px",
          }
        }
        transitionName="slide-up"
      />
    </div>
    <div
      className="filtertwo"
    >
      <div
        style={
          Object {
            "textAlign": "right",
            "width": "100px",
          }
        }
      >
        Target Code:
      </div>
      <Select
        choiceTransitionName="zoom"
        mode="multiple"
        onBlur={[Function]}
        onChange={[Function]}
        optionFilterProp="children"
        placeholder="Defect Code"
        prefixCls="ant-select"
        showSearch={true}
        style={
          Object {
            "marginLeft": "10px",
            "width": "400px",
          }
        }
        transitionName="slide-up"
      />
    </div>
  </div>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="-striped -highlight"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Defect Code",
          "accessor": [Function],
          "id": "defectId",
          "sortable": false,
          "width": 130,
        },
      ]
    }
    data={Array []}
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={20}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No rows found"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        5,
        10,
        20,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={true}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={false}
    sortable={true}
    style={
      Object {
        "height": "200px",
        "margin": "0 auto",
        "width": "500px",
      }
    }
    subRowsKey="_subRows"
  />
  <div
    className="filtertwo"
  >
    <div
      style={
        Object {
          "textAlign": "right",
          "width": "100px",
        }
      }
    >
      Others Code:
    </div>
    <Select
      choiceTransitionName="zoom"
      mode="multiple"
      onBlur={[Function]}
      onChange={[Function]}
      optionFilterProp="children"
      placeholder="Defect Code"
      prefixCls="ant-select"
      showSearch={true}
      style={
        Object {
          "marginLeft": "10px",
          "width": "400px",
        }
      }
      transitionName="slide-up"
    />
  </div>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="-striped -highlight"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Defect Code",
          "accessor": [Function],
          "id": "defectId",
          "sortable": false,
          "width": 130,
        },
      ]
    }
    data={Array []}
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={20}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No rows found"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        5,
        10,
        20,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={true}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={false}
    sortable={true}
    style={
      Object {
        "height": "200px",
        "margin": "0 auto",
        "width": "500px",
      }
    }
    subRowsKey="_subRows"
  />
  <Button
    clicked={false}
    disabled={true}
    ghost={false}
    loading={false}
    onClick={[Function]}
    prefixCls="ant-btn"
    style={
      Object {
        "margin": "10px 0px 0px 45%",
      }
    }
  >
    Check
  </Button>
</div>
`;
