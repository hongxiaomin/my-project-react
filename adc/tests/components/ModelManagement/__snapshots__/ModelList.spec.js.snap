// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) ModelList render normally 1`] = `
<div>
  <div
    className="top-left"
  >
    <span
      className="productGlass"
    >
      Model List
    </span>
    <Connect(AddImportModel) />
  </div>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="-striped -highlight"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Model ID",
          "accessor": "id",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Model Name",
          "accessor": "name",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Status",
          "accessor": "status",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Service",
          "accessor": [Function],
          "id": "currentState",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Number of Iteration",
          "accessor": "iteration",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Loss Rate",
          "accessor": "lossRate",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Model Version",
          "accessor": "version",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Header": "Create Time",
          "accessor": "createTime",
          "style": Object {
            "textAlign": "center",
          },
        },
        Object {
          "Cell": [Function],
          "Header": "Action",
          "accessor": "",
          "style": Object {
            "textAlign": "center",
          },
        },
      ]
    }
    data={
      Array [
        Object {
          "createTime": "Jan 30, 2018 9:14:36 PM",
          "currentState": "none",
          "id": 1,
          "isDefault": false,
          "isPublished": false,
          "isTrained": true,
          "isVerified": true,
          "iteration": 5000,
          "lossRate": 0.00005,
          "name": "models",
          "path": "sfdfsdfsf",
          "status": "Tested",
          "version": "1.0",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={5}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No rows found"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        5,
        10,
        20,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={true}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={true}
    showPagination={true}
    showPaginationBottom={true}
    showPaginationTop={false}
    sortable={true}
    style={
      Object {
        "height": "255px",
      }
    }
    subRowsKey="_subRows"
  />
  <Connect(DeleteDialog)
    dataDetail={Object {}}
    delOpen={false}
    toggleDel={[Function]}
  />
  <Connect(DefaultDialog)
    dataDetail={Object {}}
    isDefaultOpen={false}
    toggleDefault={[Function]}
  />
  <Connect(UnDefaultDialog)
    dataDetail={Object {}}
    toggleunDefault={[Function]}
    unDefaultOpen={false}
  />
  <Connect(PublishDialog)
    dataDetail={Object {}}
    publishOpen={false}
    togglePublish={[Function]}
  />
  <Connect(UnPublishDialog)
    dataDetail={Object {}}
    toggleUnPublish={[Function]}
    unPublishOpen={false}
  />
</div>
`;
