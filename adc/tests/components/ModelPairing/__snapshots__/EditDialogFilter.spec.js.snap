// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) EditDialog render normally 1`] = `
<div>
  <Connect(DialogFilter)
    DialogID=""
    DialogTitle="Edit Model Pairing"
    dataDetail={
      Object {
        "original": Object {
          "modelName": "a",
        },
      }
    }
    dispatch={[Function]}
    editOpen={false}
    handleSubmit={[Function]}
    modelList={Array []}
    status="a"
    that={
      EditDialog {
        "_reactInternalInstance": ShallowComponentWrapper {
          "_calledComponentWillUnmount": false,
          "_compositeType": 0,
          "_context": Object {},
          "_currentElement": <EditDialog
            dataDetail={
                  Object {
                        "original": Object {
                          "modelName": "a",
                        },
                      }
            }
            dispatch={[Function]}
            editOpen={false}
            modelList={Array []}
            status="a"
            toggleEdit={[Function]}
      />,
          "_debugID": 1,
          "_hostContainerInfo": null,
          "_hostParent": null,
          "_instance": [Circular],
          "_mountOrder": 1,
          "_pendingCallbacks": null,
          "_pendingElement": null,
          "_pendingForceUpdate": false,
          "_pendingReplaceState": false,
          "_pendingStateQueue": null,
          "_renderedComponent": NoopInternalComponent {
            "_currentElement": <div>
              <Connect(DialogFilter)
                      DialogID=""
                      DialogTitle="Edit Model Pairing"
                      dataDetail={
                              Object {
                                      "original": Object {
                                        "modelName": "a",
                                      },
                                    }
                      }
                      dispatch={[Function]}
                      editOpen={false}
                      handleSubmit={[Function]}
                      modelList={Array []}
                      status="a"
                      that={[Circular]}
                      toggleEdit={[Function]}
              />
      </div>,
            "_debugID": 2,
            "_renderedOutput": <div>
              <Connect(DialogFilter)
                      DialogID=""
                      DialogTitle="Edit Model Pairing"
                      dataDetail={
                              Object {
                                      "original": Object {
                                        "modelName": "a",
                                      },
                                    }
                      }
                      dispatch={[Function]}
                      editOpen={false}
                      handleSubmit={[Function]}
                      modelList={Array []}
                      status="a"
                      that={[Circular]}
                      toggleEdit={[Function]}
              />
      </div>,
          },
          "_renderedNodeType": 0,
          "_rootNodeID": 0,
          "_topLevelWrapper": null,
          "_updateBatchNumber": null,
          "_warnedAboutRefsInRender": false,
        },
        "context": Object {},
        "handleSubmit": [Function],
        "props": Object {
          "dataDetail": Object {
            "original": Object {
              "modelName": "a",
            },
          },
          "dispatch": [Function],
          "editOpen": false,
          "modelList": Array [],
          "status": "a",
          "toggleEdit": [Function],
        },
        "refs": Object {},
        "state": Object {
          "isTrialRun": true,
          "model": "a",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      }
    }
    toggleEdit={[Function]}
  />
</div>
`;
