import {
  STRING,
  NUMBER,
  ENUM,
} from '../propertyTypes';
/**
 * all CSS
 * define props type for pop INPUT in drawer (for user)
 *
 * undefined value -> alis name is 'auto' in drawer (for user)
 * 0 value -> alis name is 'auto' in drawer (for user)
 * '' value -> alis name is 'auto' in drawer (for user)
 *
 * @see https://www.w3schools.com/
 * @type {Object} {
 *       key: {
 *         alias: // options
 *         defaultValue, // undefined(enum) | 0(number) | ''(string)
 *         enum, // options
 *         dependency: // options(value will effect by this)
 *         hintForInput: // options
 *         max, // options
 *         min, // options
 *         selector, // options(use which component for render)
 *         selectorProps: { // example, by selector (component's props)
 *           units:         // by selecto prop key
 *           autocomplete:  // by selecto prop key
 *           hintForInput:  // by selecto prop key
 *         },
 *         type,
 *       }
 *       sytle, // config for disable css key
 * }
 */
export default {
  alignContent: {
    type: ENUM,
    defaultValue: 'stretch',
    enum: [
      'stretch',
      'center',
      'flex-start',
      'flex-end',
      'space-between',
      'space-around',
      'initial',
      'inherit',
    ],
  },
  alignItems: {
    type: ENUM,
    defaultValue: 'stretch',
    enum: [
      'stretch',
      'center',
      'flex-start',
      'flex-end',
      'baseline',
      'initial',
      'inherit',
    ],
  },
  alignSelf: {
    type: ENUM,
    defaultValue: 'auto',
    enum: [
      'auto',
      'stretch',
      'center',
      'flex-start',
      'flex-end',
      'baseline',
      'initial',
      'inherit',
    ],
  },
  backgroundAttachment: {
    type: ENUM,
    defaultValue: 'scroll',
    enum: [
      'scroll',
      'fixed',
      'local',
      'initial',
      'inherit',
    ],
  },
  backgroundBlendMode: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      'normal',
      'multiply',
      'screen',
      'overlay',
      'darken',
      'lighten',
      'color-dodge',
      'saturation',
      'color',
      'luminosity',
    ],
  },
  backgroundClip: {
    type: ENUM,
    defaultValue: 'border-box',
    enum: [
      'border-box',
      'padding-box',
      'content-box',
      'initial',
      'inherit',
    ],
  },
  backgroundColor: {
    type: STRING,
    defaultValue: 'transparent',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  backgroundImage: {
    type: STRING,
    defaultValue: 'none',
    hintForInput: 'url("[absolute|relative path]/imgName.fileType")',
  },
  backgroundOrigin: {
    type: ENUM,
    defaultValue: 'padding-box',
    enum: [
      'padding-box',
      'border-box',
      'content-box',
      'initial',
      'inherit',
    ],
  },
  backgroundPosition: {
    type: STRING,
    defaultValue: '0% 0%',
    hintForInput: 'x% y%|{number}% {number}%',
  },
  backgroundRepeat: {
    type: ENUM,
    defaultValue: 'repeat',
    enum: [
      'repeat',
      'repeat-x',
      'repeat-y',
      'no-repeat',
      'initial',
      'inherit',
    ],
  },
  backgroundSize: {
    type: ENUM,
    defaultValue: 'auto',
    enum: [
      'auto',
      'cover',
      'contain',
      'initial',
      'inherit',
    ],
  },
  borderBottomColor: {
    type: STRING,
    defaultValue: 'transparent',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  borderBottomLeftRadius: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        // 'rem',
        // 'vh',
        // 'vmax',
        // 'vmin',
        // 'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  borderBottomRightRadius: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        // 'rem',
        // 'vh',
        // 'vmax',
        // 'vmin',
        // 'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  borderBottomStyle: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'hidden',
      'dotted',
      'dashed',
      'solid',
      'double',
      'groove',
      'ridge',
      'inset',
      'outset',
      'initial',
      'inherit',
    ],
  },
  borderBottomWidth: {
    type: STRING,
    defaultValue: 'medium',
    hintForInput: 'medium|thin|thick|{number}px|initial|inherit',
  },
  borderColor: {
    type: STRING,
    defaultValue: 'transparent',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  borderLeftColor: {
    type: STRING,
    defaultValue: 'transparent',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  borderLeftStyle: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'hidden',
      'dotted',
      'dashed',
      'solid',
      'double',
      'groove',
      'ridge',
      'inset',
      'outset',
      'initial',
      'inherit',
    ],
  },
  borderLeftWidth: {
    type: STRING,
    defaultValue: 'medium',
    hintForInput: 'medium|thin|thick|{number}px|initial|inherit',
  },
  borderRadius: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        // 'rem',
        // 'vh',
        // 'vmax',
        // 'vmin',
        // 'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  borderRightColor: {
    type: STRING,
    defaultValue: 'transparent',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  borderRightStyle: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'hidden',
      'dotted',
      'dashed',
      'solid',
      'double',
      'groove',
      'ridge',
      'inset',
      'outset',
      'initial',
      'inherit',
    ],
  },
  borderRightWidth: {
    type: STRING,
    defaultValue: 'medium',
    hintForInput: 'medium|thin|thick|{number}px|initial|inherit',
  },
  borderStyle: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'hidden',
      'dotted',
      'dashed',
      'solid',
      'double',
      'groove',
      'ridge',
      'inset',
      'outset',
      'initial',
      'inherit',
    ],
  },
  borderTopColor: {
    type: STRING,
    defaultValue: 'transparent',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  borderTopLeftRadius: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        // 'rem',
        // 'vh',
        // 'vmax',
        // 'vmin',
        // 'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  borderTopRightRadius: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        // 'rem',
        // 'vh',
        // 'vmax',
        // 'vmin',
        // 'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  borderTopStyle: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'hidden',
      'dotted',
      'dashed',
      'solid',
      'double',
      'groove',
      'ridge',
      'inset',
      'outset',
      'initial',
      'inherit',
    ],
  },
  borderTopWidth: {
    type: STRING,
    defaultValue: 'medium',
    hintForInput: 'medium|thin|thick|{number}px|initial|inherit',
  },
  borderWidth: {
    type: STRING,
    defaultValue: 'medium',
    hintForInput: 'medium|thin|thick|{number}px|initial|inherit',
  },
  bottom: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  clear: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'left',
      'right',
      'both',
      'initial',
      'inherit',
    ],
  },
  color: {
    type: STRING,
    defaultValue: '',
    selector: 'css-color-textfield',
    selectorProps: {
      hintForInput: 'Hexadecimal|RGB|RGBA|HSL|HSLA|Predefined/Cross-browser color names',
    },
  },
  direction: {
    type: ENUM,
    defaultValue: 'ltr',
    enum: [
      'ltr',
      'rtl',
      'initial',
      'inherit',
    ],
  },
  display: {
    type: ENUM,
    defaultValue: 'inline',
    enum: [
      'inline',
      'block',
      'flex',
      'inline-block',
      'inline-flex',
      'inline-table',
      'list-item',
      'run-in',
      'table',
      'table-caption',
      'table-column-group',
      'table-header-group',
      'table-footer-group',
      'table-row-group',
      'table-cell',
      'table-column',
      'table-row',
      'none',
      'initial',
      'inherit',
    ],
  },
  flexDirection: {
    type: ENUM,
    defaultValue: 'row',
    enum: [
      'row',
      'row-reverse',
      'column',
      'column-reverse',
      'initial',
      'inherit',
    ],
  },
  flexWrap: {
    type: ENUM,
    defaultValue: 'nowrap',
    enum: [
      'nowrap',
      'wrap',
      'wrap-reverse',
      'initial',
      'inherit',
    ],
  },
  flexGrow: {
    type: NUMBER,
    defaultValue: 0,
  },
  flexShrink: {
    type: NUMBER,
    defaultValue: 1,
  },
  flexBasis: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  float: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'left',
      'right',
      'initial',
      'inherit',
    ],
  },
  fontFamily: {
    type: ENUM,
    defaultValue: 'Sans-Serif',
    enum: [
      'Alegreya Sans',
      'Alegreya',
      'Anonymous Pro',
      'Archivo Narrow',
      'Arvo',
      'BioRhyme',
      'Bitter',
      'Cabin',
      'Cardo',
      'Chivo',
      'Cormorant',
      'Crimson Text',
      'Domine',
      'Eczar',
      'Fira Sans',
      'Gentium Basic',
      'Inconsolata',
      'Karla',
      'Lato',
      'Libre Baskerville',
      'Libre Franklin',
      'Lora',
      'Merriweather',
      'Monospace', // generic family, by user's OS
      'Montserrat',
      'Neuton',
      'Old Standard TT',
      'Open Sans',
      'Playfair Display',
      'Poppins',
      'PT Sans',
      'PT Serif',
      'Rajdhani',
      'Raleway',
      'Roboto Slab',
      'Roboto',
      'Rubik',
      'Sans-Serif', // generic family, by user's OS
      'Serif', // generic family, by user's OS
      'Source Sans Pro',
      'Source Serif Pro',
      'Space Mono',
      'Work Sans',
    ],
  },
  fontSize: {
    type: STRING,
    defaultValue: 'medium',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        // 'vh',
        // 'vmax',
        // 'vmin',
        // 'vw',
      ],
      autocomplete: [
        'medium',
        'xx-small',
        'x-small',
        'small',
        'large',
        'x-large',
        'xx-large',
        'smaller',
        'larger',
        'initial',
        'inherit',
      ],
      hintForInput: `{number}{unit}|medium|xx-small|x-small|small|large|x-large|xx-large|smaller|
                  larger|initial|inherit`.replace(/\n/gm, ''),
    },
  },
  fontStyle: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      'normal',
      'italic',
      'oblique',
      'initial',
      'inherit',
    ],
  },
  fontVariant: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      'normal',
      'small-caps',
      'initial',
      'inherit',
    ],
  },
  fontWeight: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      '100',
      '200',
      '300',
      '400(normal)', // is the same as normal
      '500',
      '600',
      '700(bold)', // is the same as bold
      '800',
      '900',
      'normal',
      'bold',
      'bolder',
      'lighter',
      'initial',
      'inherit',
    ],
  },
  height: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  justifyContent: {
    type: ENUM,
    defaultValue: 'flex-start',
    enum: [
      'flex-start',
      'flex-end',
      'center',
      'space-between',
      'space-around',
      'initial',
      'inherit',
    ],
  },
  left: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  letterSpacing: {
    type: STRING,
    defaultValue: 'normal',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'normal',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|normal|initial|inherit',
    },
  },
  lineHeight: {
    type: STRING,
    defaultValue: 'normal',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'normal',
        '1', // the same as 100%
        '2',
        '3',
        '4',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|{number}|normal|initial|inherit',
    },
  },
  margin: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  marginBottom: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  marginLeft: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  marginRight: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  marginTop: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  maxHeight: {
    type: STRING,
    defaultValue: 'none',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'none',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|none|initial|inherit',
    },
  },
  maxWidth: {
    type: STRING,
    defaultValue: 'none',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'none',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|none|initial|inherit',
    },
  },
  minHeight: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|0|initial|inherit',
    },
  },
  minWidth: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|0|initial|inherit',
    },
  },
  overflow: {
    type: ENUM,
    defaultValue: 'visible',
    enum: [
      'visible',
      'hidden',
      'scroll',
      'auto',
      'initial',
      'inherit',
    ],
  },
  overflowX: {
    type: ENUM,
    defaultValue: 'visible',
    enum: [
      'visible',
      'hidden',
      'scroll',
      'auto',
      'initial',
      'inherit',
    ],
  },
  overflowY: {
    type: ENUM,
    defaultValue: 'visible',
    enum: [
      'visible',
      'hidden',
      'scroll',
      'auto',
      'initial',
      'inherit',
    ],
  },
  padding: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  paddingBottom: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  paddingLeft: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  paddingRight: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  paddingTop: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  position: {
    type: ENUM,
    defaultValue: 'static',
    enum: [
      'static',
      'absolute',
      'fixed',
      'relative',
      'initial',
      'inherit',
    ],
  },
  right: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  textAlign: {
    type: ENUM,
    defaultValue: 'left',
    enum: [
      'left',
      'right',
      'center',
      'justify',
      'initial',
      'inherit',
    ],
    dependency: 'direction',
  },
  textDecoration: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'underline',
      'overline',
      'line-through',
      'initial',
      'inherit',
    ],
  },
  textIndent: {
    type: STRING,
    defaultValue: '0',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [],
      hintForInput: '{number}{unit}|initial|inherit',
    },
  },
  textOverflow: {
    type: ENUM,
    defaultValue: 'clip',
    enum: [
      'clip',
      'ellipsis',
      'string',
      'initial',
      'inherit',
    ],
  },
  textShadow: {
    type: STRING,
    defaultValue: 'none',
    hintForInput: `h-shadow v-shadow blur-radius color|{number}px {number}px {number}px {color}|
                    none|initial|inherit`.replace(/\n/gm, ''),
  },
  textTransform: {
    type: ENUM,
    defaultValue: 'none',
    enum: [
      'none',
      'capitalize',
      'uppercase',
      'lowercase',
      'initial',
      'inherit',
    ],
  },
  top: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit)
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  verticalAlign: {
    type: ENUM,
    defaultValue: 'baseline',
    enum: [
      'baseline',
      'sub',
      'super',
      'top',
      'text-top',
      'middle',
      'bottom',
      'text-bottom',
      'initial',
      'inherit',
    ],
  },
  visibility: {
    type: ENUM,
    defaultValue: 'visible',
    enum: [
      'visible',
      'hidden',
      'collapse',
      'initial',
      'inherit',
    ],
  },
  whiteSpace: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      'normal',
      'nowrap',
      'pre',
      'pre-line',
      'pre-wrap',
      'initial',
      'inherit',
    ],
  },
  width: {
    type: STRING,
    defaultValue: 'auto',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'auto',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|auto|initial|inherit',
    },
  },
  wordBreak: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      'normal',
      'break-all',
      'keep-all',
      'initial',
      'inherit',
    ],
  },
  wordSpacing: {
    type: STRING,
    defaultValue: 'normal',
    selector: 'css-unit-textfield',
    selectorProps: {
      units: [
        '', // for autocomplete use (if value in them, then no unit) （全部補上這行）
        '%',
        'ch',
        'cm',
        'em',
        'ex',
        'in',
        'mm',
        'pc',
        'pt',
        'px',
        'rem',
        'vh',
        'vmax',
        'vmin',
        'vw',
      ],
      autocomplete: [
        'normal',
        'initial',
        'inherit',
      ],
      hintForInput: '{number}{unit}|normal|initial|inherit',
    },
  },
  wordWrap: {
    type: ENUM,
    defaultValue: 'normal',
    enum: [
      'normal',
      'break-word',
      'initial',
      'inherit',
    ],
  },
  zIndex: {
    type: STRING,
    defaultValue: 'auto',
    hintForInput: 'auto|{number}|initial|inherit',
  },
};
